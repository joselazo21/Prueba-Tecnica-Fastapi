"""add mixins to the other models

Revision ID: 599911823753
Revises: c654c3928ad9
Create Date: 2025-10-29 14:38:03.105423

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '599911823753'
down_revision: Union[str, Sequence[str], None] = 'c654c3928ad9'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('comments', sa.Column('author_id', sa.Integer(), nullable=False))
    op.add_column('comments', sa.Column('is_deleted', sa.Boolean(), nullable=False))
    op.add_column('comments', sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False))
    op.add_column('comments', sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False))
    op.create_index(op.f('ix_comments_is_deleted'), 'comments', ['is_deleted'], unique=False)
    op.create_foreign_key(None, 'comments', 'users', ['author_id'], ['id'])
    op.add_column('posts', sa.Column('is_deleted', sa.Boolean(), nullable=False))
    op.add_column('posts', sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False))
    op.add_column('posts', sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False))
    op.create_index(op.f('ix_posts_is_deleted'), 'posts', ['is_deleted'], unique=False)
    op.create_foreign_key(None, 'posts', 'users', ['owner_id'], ['id'])
    op.add_column('tags', sa.Column('is_deleted', sa.Boolean(), nullable=False))
    op.add_column('tags', sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False))
    op.add_column('tags', sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False))
    op.create_index(op.f('ix_tags_is_deleted'), 'tags', ['is_deleted'], unique=False)
    op.drop_column('users', 'deleted_at')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('users', sa.Column('deleted_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True))
    op.drop_index(op.f('ix_tags_is_deleted'), table_name='tags')
    op.drop_column('tags', 'updated_at')
    op.drop_column('tags', 'created_at')
    op.drop_column('tags', 'is_deleted')
    op.drop_constraint(None, 'posts', type_='foreignkey')
    op.drop_index(op.f('ix_posts_is_deleted'), table_name='posts')
    op.drop_column('posts', 'updated_at')
    op.drop_column('posts', 'created_at')
    op.drop_column('posts', 'is_deleted')
    op.drop_constraint(None, 'comments', type_='foreignkey')
    op.drop_index(op.f('ix_comments_is_deleted'), table_name='comments')
    op.drop_column('comments', 'updated_at')
    op.drop_column('comments', 'created_at')
    op.drop_column('comments', 'is_deleted')
    op.drop_column('comments', 'author_id')
    # ### end Alembic commands ###
